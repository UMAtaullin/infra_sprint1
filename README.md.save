 ufw allow OpenSSH
    ```
    - Включите файрвол:
    ```
    sudo ufw enable
    ```
7. Соберите статику фронтенд-приложения
    - Перейдите в директорию infra_sprint1/frontend и выполните команду:
    ```
    npm run build
    ```
    - Скопируйте в системную директорию /var/www/ содержимое папки .../frontend/build/:
    ```
    sudo cp -r <имя_пользователя>/infra_sprint1/frontend/build/. /var/www/kittygram/
    ```
    - Создайте директорию media в директории /var/www/kittygram/
    ```
    sudo mkdir media
    ```
    - В настройках бэкенда для константы MEDIA_ROOT укажите путь до созданной директории media:
    ```
    MEDIA_ROOT = '/var/www/kittygram/media'
    ```
    - Назначьте текущего пользователя владельцем директории media:
    ```
    sudo chown -R <имя_пользователя> /var/www/kittygram/media/
    ```
8. Получите доменное имя, по которому будет доступно приложение
    - Используйте любой сервис, выдающий доменные имена, например No-IP
    - Добавьте доменное имя в настройки Django
    ```
    ALLOWED_HOSTS = ['xxx.xxx.xxx.xxx', '127.0.0.1', 'localhost', 'ваш-домен']
    ```
    - Перезапустите Gunicorn
    ```
    sudo systemctl restart gunicorn_kittygram
    ```
    - Пропишите в конфигурационном файле Nginx выданное вам доменное имя:
    ```
        server {
    ...
        server_name <ваш-ip> <ваш-домен>;
    ...
    }
    ```
    - Проверьте корректность конфигурации и перезагрузите её:
    ```
    sudo nginx -t
    sudo systemctl reload nginx
    ```
9. Настройте файл конфигурации веб-сервера
    - Через редактор Nano откройте файл конфигурации веб-сервера:
    ```
    sudo nano /etc/nginx/sites-enabled/default
    ```
    - Удалите все настройки из файла и запишите новые:
    ```
    server {

        server_name 158.160.7.223 <ваш-домен>;

        location /api/ {
            proxy_pass http://127.0.0.1:8080;
        }

        location /admin/ {
            proxy_pass http://127.0.0.1:8080;
        }

        location /media/ {
            alias /var/www/kittygram/media/;
        }

        location / {
            root   /var/www/kittygram;
            index  index.html index.htm;
            try_files $uri /index.html;
        }

    }
    ```
    - Проверьте корректность конфигурации и перезагрузите её:
    ```
    sudo nginx -t
    sudo systemctl reload nginx
    ```
10. Настройте шифрование запросов по протоколу HTTPS
    - Установите certbot на ваш удалённый сервер
    ```
    sudo apt install snapd
    sudo snap install core; sudo snap refresh core
    sudo snap install --classic certbot
    sudo ln -s /snap/bin/certbot /usr/bin/certbot
    ```
    - Чтобы начать процесс получения сертификата, введите команду:
    ```
    sudo certbot --nginx
    ```
    - Перезагрузите конфигурацию Nginx:
    ```
    sudo systemctl reload nginx
    ```
    - Настройте автоматическое обновление SSL-сертификата
    ```
    sudo certbot renew --dry-run
    ```

11. Проверти работу сайта в браузере по адресу https://<ваш-домен>/

### Автор
Атауллин Урал, студент Яндекс практикумa.

